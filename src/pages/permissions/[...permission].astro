---
import Layout from "@/layouts/Layout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const roles = await getCollection("roles");
  const permissions = new Set();

  // Collect all unique permissions
  roles.forEach((role) => {
    role.data.included_permissions.forEach((permission) => {
      permissions.add(permission);
    });
  });

  return Array.from(permissions).map((permission) => ({
    params: { permission },
    props: {
      permission,
      roles: roles.filter((role) =>
        role.data.included_permissions.includes(permission as string)
      ),
    },
  }));
}

const { permission, roles } = Astro.props;
---

<Layout title={`Permission : ${permission}`}>
  <main class="flex-1 container mx-auto px-4 py-8">
    <section class="card bg-base-100 shadow-xl">
      <div class="card-body">
        <h1 class="card-title text-2xl flex items-center gap-2">
          <span id="permission-id" class="font-mono">{permission}</span>
          <button
            class="btn btn-sm btn-ghost"
            onclick="copyPermission()"
            aria-label="Copy Permission"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-12a2 2 0 00-2-2h-2M8 5a2 2 0 002 2h4a2 2 0 002-2M8 5a2 2 0 012-2h4a2 2 0 012 2"
              ></path>
            </svg>
          </button>
        </h1>

        <h2 class="text-xl font-semibold mt-4">
          {roles.length} Roles Assign this Permission :
        </h2>

        <div class="form-control w-full max-w-md my-4">
          <div class="relative">
            <input
              type="text"
              id="roleFilter"
              placeholder="Search for your specific roles..."
              class="input input-bordered w-full pr-10"
            />
            <span
              class="absolute right-3 top-1/2 -translate-y-1/2 text-base-content/50"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </span>
          </div>
        </div>

        <ul id="permissionsList" class="bg-base-200 rounded-box p-2">
          {
            roles.map((role) => (
              <li
                id={role.id}
                class="role-item my-1"
                data-role={role.data.name.toLowerCase()}
              >
                <a
                  href={`/roles/${role.data.name}`}
                  class="link link-primary hover:active font-mono"
                >
                  {role.data.name}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </section>
  </main>
  <script is:inline>
    function copyPermission() {
      const permissionName = document.getElementById("permission-id").innerText;
      navigator.clipboard
        .writeText(permissionName)
        .then(() => {
          alert("Permission copied to clipboard!");
        })
        .catch((err) => {
          console.error("Failed to copy permission : ", err);
        });
    }

    // Roles filtering
    const roleFilter = document.getElementById("roleFilter");
    const roleItems = document.getElementsByClassName("role-item");

    roleFilter?.addEventListener("input", (e) => {
      const searchTerm = e.target.value.toLowerCase();

      Array.from(roleItems).forEach((item) => {
        const permission = item.getAttribute("data-role") || "";
        const isVisible = permission.includes(searchTerm);
        item.style.display = isVisible ? "block" : "none";
      });
    });
  </script>
</Layout>
